{
  // Choose default parser.
  "parser": "@typescript-eslint/parser",

  // Parser options.
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module"
  },

  // Add plugins.
  "extends": [
    // Prevent double linting from ts and eslint.
    "plugin:@typescript-eslint/recommended",

    // Prevent double linting from ts and prettier.
    "prettier/@typescript-eslint",

    // Add rules for test files, it forbids you from writing tests
    // without describe part, it doesn't allow you to write tests that doesn't
    // have assertions, and many more.
    "plugin:jest/all",

    // Prevent from writing promises with no resolve.
    "plugin:promise/recommended",

    // Add recommended prettier rules.
    "plugin:prettier/recommended"
  ],

  // Add rules if needed, I am happy as it is.
  "rules": {},

  // Add config for GraphQL files.
  "overrides": [
    {
      "files": ["*.graphql"],
      "parser": "@graphql-eslint/eslint-plugin",
      "plugins": ["@graphql-eslint"],
      "rules": {
        "@graphql-eslint/validate-against-schema": ["error"],
        "@graphql-eslint/require-description": [
          "error",
          {
            "on": [
              "SchemaDefinition",
              "ObjectTypeDefinition",
              "FieldDefinition",
              "InputValueDefinition",
              "InterfaceTypeDefinition",
              "UnionTypeDefinition",
              "EnumTypeDefinition",
              "EnumValueDefinition",
              "InputObjectTypeDefinition",
              "DirectiveDefinition"
            ]
          }
        ],
        "@graphql-eslint/prettier": ["error"],
        "@graphql-eslint/require-id-when-available": ["error"],
        "@graphql-eslint/no-operation-name-suffix": ["error"],
        "@graphql-eslint/no-case-insensitive-enum-values-duplicates": ["error"],
        "@graphql-eslint/require-deprecation-reason": ["error"],
        "@graphql-eslint/no-anonymous-operations": ["error"],
        "@graphql-eslint/naming-convention": [
          "error",
          {
            "ObjectTypeDefinition": "PascalCase",
            "FieldDefinition": "camelCase",
            "EnumValueDefinition": "camelCase",
            "InputValueDefinition": "camelCase",
            "FragmentDefinition": "PascalCase",
            "ScalarTypeDefinition": "PascalCase",
            "leadingUnderscore": "forbid",
            "trailingUnderscore": "forbid"
          }
        ],
        "@graphql-eslint/description-style": ["error", { "style": "inline" }],
        "@graphql-eslint/input-name": ["error", { "checkInputType": true }],
        "@graphql-eslint/avoid-operation-name-prefix": [
          "error",
          { "keywords": ["get"] }
        ],
        "prettier/prettier": "off"
      }
    }
  ]
}
